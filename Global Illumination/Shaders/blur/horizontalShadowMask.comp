#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 1, rgba8) uniform image2D resultImage;

float weight[2] = float[] (0.5, 0.25);

void main()
{	
    vec3 inputShadow = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)).rgb;

    vec3 resultColor = inputShadow * weight[0];
    
    for(int i = 1; i < 2; i++)
    {
        vec3 inputShadowMore = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x + i, gl_GlobalInvocationID.y)).rgb;
        if(abs(inputShadowMore.y - inputShadow.y) > 0.001)
            inputShadowMore = inputShadow;
        vec3 inputShadowLess = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x - i, gl_GlobalInvocationID.y)).rgb;
         if(abs(inputShadowLess.y - inputShadow.y) > 0.001)
            inputShadowLess = inputShadow;

        resultColor += inputShadowMore * weight[i];
        resultColor += inputShadowLess * weight[i];
    }

    imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(resultColor.r, inputShadow.g, inputShadow.b, 1.0));
}