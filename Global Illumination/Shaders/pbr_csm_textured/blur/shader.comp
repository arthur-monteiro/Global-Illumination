#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 1, rgba8) uniform image2D resultImage;

void main()
{	
    float blurImpact = 1.0;

    ivec2 offsets[9] = ivec2[](
        ivec2(-1, 1), // top-left
        ivec2(0, 1), // top-center
        ivec2(1, 1), // top-right
        ivec2(-1, 0),   // center-left
        ivec2(0, 0),   // center-center
        ivec2(1, 0),   // center-right
        ivec2(-1, -1), // bottom-left
        ivec2(0, -1), // bottom-center
        ivec2(0, -1)  // bottom-right    
    );
    float kernel[9] = float[](
        blurImpact, 2.0 * blurImpact, blurImpact,
        2.0 * blurImpact,  4.0, 2.0 * blurImpact,
        blurImpact, 2.0 * blurImpact, blurImpact
    );
    float sum = 12.0 * blurImpact + 4.0;

	vec3 resultColor = vec3(0.0);

    for(int i = 0; i < 9; ++i)
    {
        resultColor += imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x + offsets[i].x, gl_GlobalInvocationID.y + offsets[i].y)).rgb * (kernel[i] / sum);
    }

	imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(resultColor, 1.0));
}